@startuml

class MastermindGameLauncher {
  + static void main(String[] args)
}

class Mastermind {
  - Board board
  + void play()
  - void playMastermind()
  - boolean resumeGame()
}

class Board {
  - static final int MAX_PLAYS = 10;
  - int attemp;
  - SecretCombination secretCombination;
  - ProposedCombination[] proposedCombinations;
  - Result[] results;
  Board()
  void play()
  - void storeCombinationGuess(ProposedCombination proposedCombination)
  - ProposedCombination makeACombinationGuess()
  - void writeAttempInfo()
  boolean hasWinner()
  boolean hasLooser()
}

enum Color {
  RED
  BLUE
  YELLOW
  GREEN
  ORANGE
  PURPLE
  - String symbol
  - Color(String symbol)
  static Color getColor(int number)
  String getSymbol()
  static Color getColorBySymbol(String symbol)
  static String getAllSymbols()
}

class Combination {
  # static final int MAX_COLORS = 4
  # List<Color> colors
  # Combination()
}

class ProposedCombination  {
  List<Color> getProposedCombination()
  String getProposedCombinationAsString()
  void setColorsFromCombination()
  boolean isCombinationWrong()
  - boolean isCombinationLengthValid()
  - boolean isAllColorCombinationsValid()
}

class SecretCombination  {
  SecretCombination()
  - void setRandomColorToEachCombinationPosition()
  - int getRandomNumberUsingNextInt(int min, int max)
  void writeCombination()
  Result checkResultFromProposedCombination(ProposedCombination proposedCombination)
  - int getWhites(ProposedCombination proposedCombination, int whites)
  - int getBlacks(ProposedCombination proposedCombination, int blacks)
}

class Result {
  - int blacks
  - int whites
  Result(int blacks, int whites)
  int getBlacks()
  void write(String combination)
}

enum Errors {
  WRONG_LENGHT
  WRONG_COLORS
  - String message
  Errors(String message)
  String getMessage()
  String getWrongColorMessage(String colorsCombination)
}

enum Message {
  TITLE
  SECRET_COMBINATION
  PROPOSE_COMBINATION
  RESULT_COMBINATION
  ATTEMPT
  WIN
  LOOSE
  RESUME
  - String message
  Message(String message)
  String getMessage()
  String getMessageSecretCombination(String combination)
  String getMessageAttempt(int attempt)
  String getResultCombination(String combination, int blacks, int whites)
}

class Console {
	+ static Console console
	+ static Console instance()
	- BufferedReader bufferedReader
	+ String readString(String title)
	+ String readString()
	+ int readInt(String title)
	+ char readChar(String title)
	+ void writeln()
	+ void write(String string)
	+ void write(int integer)
	+ void writeln(String string)
	+ void writeln(int integer)
	+ void write(char character)
	+ void writeError(String format)
}

class YesNoDialog {
	- static final char AFFIRMATIVE = 'y'
	- static final char NEGATIVE = 'n'
	- static final String SUFFIX
	- static final String MESSAGE
	- char answer
	+ boolean read(String message)
	- boolean isAfirmative()
	- char getAnswer()
	- boolean isNegative()
}

MastermindGameLauncher ..> Mastermind
Mastermind *-down-> Board

Combination <|-- SecretCombination
Combination <|-- ProposedCombination
Board *---> SecretCombination
Board *---> ProposedCombination
Board *-down--> Result
Combination *---> Color

Mastermind ...> Message
Board ...> Message
SecretCombination ...> Message
ProposedCombination ...> Message
ProposedCombination ...> Errors

Mastermind ..> Console
Mastermind ..> YesNoDialog
Board ..> Console
ProposedCombination ..> Console
Result ..> Console

@enduml